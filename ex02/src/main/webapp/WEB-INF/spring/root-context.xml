<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE" />
		<property name="username" value="book_ex" />
		<property name="password" value="book_ex" />	
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>	
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<mybatis-spring:scan base-package="org.zerock.mapper"/>
	<context:component-scan base-package="org.zerock.service"></context:component-scan>
	<context:component-scan base-package="org.zerock.quartz.service"></context:component-scan>
	<!-- 테스트용 Job  -->
	<bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 서비스 구현 객체의 빈 이름을 인자로 넣어 줍니다. -->
		<property name="targetObject" ref="scheduleService" />
		<!-- 서비스 객체에서 주기적으로 실행될 메서드를 지정합니다. -->
		<property name="targetMethod" value="testJobMethod" />
		<!-- 동시 실행을 방지합니다. -->
		<property name="concurrent" value="false" />
	</bean>
	
	<!-- 테스트용 Trigger -->
	<bean id="testJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="testJob" />
		<!-- CronTrigger를 사용하여 매일 1시에 실행되도록 지정 -->
		<property name="cronExpression" value="0 0 12 * * ?" />
	</bean>	
	
	<!-- 테스트용 Job2  -->
	<bean id="testJob2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 서비스 구현 객체의 빈 이름을 인자로 넣어 줍니다. -->
		<property name="targetObject" ref="scheduleService" />
		<!-- 서비스 객체에서 주기적으로 실행될 메서드를 지정합니다. -->
		<property name="targetMethod" value="testInsertJobMethod" />
		<!-- 동시 실행을 방지합니다. -->
		<property name="concurrent" value="false" />
	</bean>
	
	<!-- 테스트용 Trigger2 -->
	<bean id="testJobTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="testJob2" />
		<!-- CronTrigger를 사용하여 매일 1시에 실행되도록 지정 -->
		<property name="cronExpression" value="0 18 16 * * ?" />
	</bean>
	
	<!-- 테스트용 Scheduler2 -->
	<bean id="testJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="testJobTrigger" />
				<ref bean="testJobTrigger2" />
			</list>
		</property>
	</bean>
</beans>